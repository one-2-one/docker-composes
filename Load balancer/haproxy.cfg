global
  ssl-default-bind-options ssl-min-ver TLSv1.2
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  log stdout format raw local0
  maxconn 5000
  #nbproc 2
  #cpu-map 1 0
  #cpu-map 2 1
  daemon

defaults
  log global
  option dontlognull
  option http-server-close
  option forwardfor except 127.0.0.0/8
  option redispatch
  retries 3
  timeout http-request 20s
  timeout queue 1m
  timeout connect 10s
  timeout client 1m
  timeout server 1m
  timeout http-keep-alive 30s
  timeout check 10s
  maxconn 3000

listen  stats
  bind            *:1960
  mode            http
  log             global
  maxconn 10
  timeout queue   100s

  stats enable
  stats hide-version
  stats refresh 30s
  stats show-node
  stats auth adminha:ksadminha2022
  stats uri  /haproxy?stats

# frontend ssh
#    bind *:2222
#    mode tcp
#    option tcplog
#    use_backend gitlab

# frontend http_prometheus
#    bind *:80
#    mode http
#    option httplog
#    acl acl_prometheus hdr(host) -m beg prometheus.sys.
#    acl acl_alertmanager hdr(host) -m beg alertmanager.sys.
#    acl acl_jiralert hdr(host) -m beg jiralert.sys.
#    acl acl_grafana hdr(host) -m beg grafana.sys.

#    use_backend prometheus_web if acl_prometheus
#    use_backend alertmanager_web if acl_alertmanager
#    use_backend jiralert_web if acl_jiralert
#    use_backend grafana_web if acl_grafana


frontend https_prometheus
   bind *:80
   bind :443 ssl crt /opt/haproxy/haproxy.crt
   http-request redirect scheme https unless { ssl_fc }
   mode http
   option httplog
   acl acl_prometheus hdr(host) -m beg prometheus.sys.
   acl acl_alertmanager hdr(host) -m beg alertmanager.sys.
   acl acl_jiralert hdr(host) -m beg jiralert.sys.
   acl acl_grafana hdr(host) -m beg grafana.sys.

   use_backend prometheus_web if acl_prometheus
   use_backend alertmanager_web if acl_alertmanager
   use_backend jiralert_web if acl_jiralert
   use_backend grafana_web if acl_grafana


backend prometheus_web
   mode http
   balance roundrobin
   #cookie SERVERID insert indirect nocache
   server prometheus_web 10.0.0.10:9090 check

backend alertmanager_web
   mode http
   balance roundrobin
   #cookie SERVERID insert indirect nocache
   server alertmanager_web 10.0.0.10:9093 check

backend jiralert_web
   mode http
   balance roundrobin
   #cookie SERVERID insert indirect nocache
   server jiralert_web 10.0.0.10:9097 check

backend grafana_web
   mode http
   balance roundrobin
   #cookie SERVERID insert indirect nocache
   server grafana_web 10.0.0.10:3000 check

